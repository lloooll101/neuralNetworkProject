#version 460 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(r32f, binding = 0) uniform image1D matrix;
layout(r32f, binding = 1) uniform image1D rngseed;

float PHI = 1.61803398874989484820459;  // Golden Ratio   

float gold_noise(in float x, in float seed){
    return fract(tan(distance(x*PHI, x)*seed)*x);
}

void main() {
    int texCoord = int(gl_WorkGroupID.x);
    float texCoordF = float(gl_WorkGroupID.x)/float(gl_WorkGroupSize.x);

    imageStore(matrix, texCoord, vec4(gold_noise(texCoordF + 1.0f, imageLoad(rngseed, 0).r), 0.0f, 0.0f, 0.0f));
}