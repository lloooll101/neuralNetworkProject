#version 460 core

layout (local_size_x = 16, local_size_y = 64, local_size_z = 1) in;

layout(r32f, binding = 0) uniform image1DArray matrix;

layout( location = 0 ) uniform float inpSeed;
layout( location = 1 ) uniform ivec2 matrixDimensions;

float PHI = 1.61803398874989484820459;  // Golden Ratio   

float gold_noise(in vec2 xy, in float seed){
    return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);
}

void main() {
    ivec2 texCoord = ivec2(gl_WorkGroupID.x * 16, gl_WorkGroupID.y * 64) + ivec2(gl_LocalInvocationID.xy);
    if(texCoord.x >= matrixDimensions.x || texCoord.y >= matrixDimensions.y) {
        return;
    }
    vec2 texCoordF = vec2(texCoord) / vec2(matrixDimensions);
    imageStore(matrix, texCoord, vec4(gold_noise(texCoordF + vec2(0.1f), inpSeed), 0.0f, 0.0f, 0.0f));
}