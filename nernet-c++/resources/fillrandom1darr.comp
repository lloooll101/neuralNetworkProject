#version 460 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(r32f, binding = 0) uniform image1DArray matrix;

layout( location = 0 ) uniform float inpSeed;

float PHI = 1.61803398874989484820459;  // Golden Ratio   

float gold_noise(in vec2 xy, in float seed){
    return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);
}

void main() {
    ivec2 texCoord = ivec2(gl_WorkGroupID.xy);
    vec2 texCoordF = vec2(float(gl_WorkGroupID.x)/float(gl_NumWorkGroups.x), float(gl_WorkGroupID.y)/float(gl_NumWorkGroups.y));

    imageStore(matrix, texCoord, vec4(gold_noise(texCoordF + vec2(1.0f), inpSeed), 0.0f, 0.0f, 0.0f));
}