#version 460 core

layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(rgba16f, binding = 0) uniform image2DArray matrix;

layout( location = 0 ) uniform vec4 inpSeed;
layout( location = 1 ) uniform ivec3 matrixDimensions;

float PHI = 1.61803398874989484820459;  // Golden Ratio   

float sfract(float x) {
    return fract(x) - float(x < 0.0f);
} 

float gold_noise(in vec3 xyz, in float seed){
    return sfract(tan(distance(xyz*PHI, xyz)*seed)*xyz.x);
}

void main() {
    ivec3 texCoord = ivec3(gl_WorkGroupID.xyz * 4) + ivec3(gl_LocalInvocationID.xyz);
    if(texCoord.x >= matrixDimensions.x || texCoord.y >= matrixDimensions.y || texCoord.z >= matrixDimensions.z) {
        return;
    }
    imageStore(matrix, texCoord, 
        vec4(
            gold_noise(vec3(texCoord) + vec3(0.1f), inpSeed.x), 
            gold_noise(vec3(texCoord) + vec3(0.2f), inpSeed.y), 
            gold_noise(vec3(texCoord) + vec3(0.3f), inpSeed.z), 
            gold_noise(vec3(texCoord) + vec3(0.4f), inpSeed.w)
        )
    );
}