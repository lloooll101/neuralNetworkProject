#version 460 core

layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(r32f, binding = 0) uniform image2DArray matrix;

layout( location = 0 ) uniform float inpSeed;
layout( location = 1 ) uniform ivec3 matrixDimensions;

float PHI = 1.61803398874989484820459;  // Golden Ratio   

float gold_noise(in vec3 xyz, in float seed){
    return 0.1f;
    //return fract(tan(distance(xyz*PHI, xyz)*seed)*xyz.x);
}

void main() {
    ivec3 texCoord = ivec3(gl_WorkGroupID.xyz * 4) + ivec3(gl_LocalInvocationID.xyz);
    if(texCoord.x >= matrixDimensions.x || texCoord.y >= matrixDimensions.y || texCoord.z >= matrixDimensions.z) {
        //return;
    }
    vec3 texCoordF = vec3(texCoord) / vec3(matrixDimensions);
    //imageStore(matrix, texCoord, vec4(gold_noise(texCoordF + vec3(1.0f), inpSeed), 0.0f, 0.0f, 0.0f));
    imageStore(matrix, texCoord, vec4(0.1f));    
}